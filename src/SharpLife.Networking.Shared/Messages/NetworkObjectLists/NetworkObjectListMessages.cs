// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NetworkObjectListMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SharpLife.Networking.Shared.Messages.NetworkObjectLists {

  /// <summary>Holder for reflection information generated from NetworkObjectListMessages.proto</summary>
  public static partial class NetworkObjectListMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for NetworkObjectListMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkObjectListMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9OZXR3b3JrT2JqZWN0TGlzdE1lc3NhZ2VzLnByb3RvEjdTaGFycExpZmUu",
            "TmV0d29ya2luZy5TaGFyZWQuTWVzc2FnZXMuTmV0d29ya09iamVjdExpc3Rz",
            "IiYKEU9iamVjdERlc3RydWN0aW9uEhEKCW9iamVjdF9pZBgBIAEoDSKeAQoM",
            "RnJhbWVNZXNzYWdlEg8KB2xpc3RfaWQYASABKA0SZQoRb2JqZWN0c19kZXN0",
            "cm95ZWQYAiADKAsySi5TaGFycExpZmUuTmV0d29ya2luZy5TaGFyZWQuTWVz",
            "c2FnZXMuTmV0d29ya09iamVjdExpc3RzLk9iamVjdERlc3RydWN0aW9uEhYK",
            "Dm9iamVjdF91cGRhdGVzGAMgASgMInkKIE5ldHdvcmtPYmplY3RMaXN0RnJh",
            "bWVMaXN0VXBkYXRlElUKBmZyYW1lcxgBIAMoCzJFLlNoYXJwTGlmZS5OZXR3",
            "b3JraW5nLlNoYXJlZC5NZXNzYWdlcy5OZXR3b3JrT2JqZWN0TGlzdHMuRnJh",
            "bWVNZXNzYWdlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction), global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction.Parser, new[]{ "ObjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage), global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage.Parser, new[]{ "ListId", "ObjectsDestroyed", "ObjectUpdates" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.NetworkObjectListFrameListUpdate), global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.NetworkObjectListFrameListUpdate.Parser, new[]{ "Frames" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ObjectDestruction : pb::IMessage<ObjectDestruction> {
    private static readonly pb::MessageParser<ObjectDestruction> _parser = new pb::MessageParser<ObjectDestruction>(() => new ObjectDestruction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectDestruction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.NetworkObjectListMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDestruction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDestruction(ObjectDestruction other) : this() {
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDestruction Clone() {
      return new ObjectDestruction(this);
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectDestruction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectDestruction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectDestruction other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrameMessage : pb::IMessage<FrameMessage> {
    private static readonly pb::MessageParser<FrameMessage> _parser = new pb::MessageParser<FrameMessage>(() => new FrameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.NetworkObjectListMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameMessage(FrameMessage other) : this() {
      listId_ = other.listId_;
      objectsDestroyed_ = other.objectsDestroyed_.Clone();
      objectUpdates_ = other.objectUpdates_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameMessage Clone() {
      return new FrameMessage(this);
    }

    /// <summary>Field number for the "list_id" field.</summary>
    public const int ListIdFieldNumber = 1;
    private uint listId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ListId {
      get { return listId_; }
      set {
        listId_ = value;
      }
    }

    /// <summary>Field number for the "objects_destroyed" field.</summary>
    public const int ObjectsDestroyedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction> _repeated_objectsDestroyed_codec
        = pb::FieldCodec.ForMessage(18, global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction.Parser);
    private readonly pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction> objectsDestroyed_ = new pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.ObjectDestruction> ObjectsDestroyed {
      get { return objectsDestroyed_; }
    }

    /// <summary>Field number for the "object_updates" field.</summary>
    public const int ObjectUpdatesFieldNumber = 3;
    private pb::ByteString objectUpdates_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ObjectUpdates {
      get { return objectUpdates_; }
      set {
        objectUpdates_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListId != other.ListId) return false;
      if(!objectsDestroyed_.Equals(other.objectsDestroyed_)) return false;
      if (ObjectUpdates != other.ObjectUpdates) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListId != 0) hash ^= ListId.GetHashCode();
      hash ^= objectsDestroyed_.GetHashCode();
      if (ObjectUpdates.Length != 0) hash ^= ObjectUpdates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ListId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ListId);
      }
      objectsDestroyed_.WriteTo(output, _repeated_objectsDestroyed_codec);
      if (ObjectUpdates.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ObjectUpdates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ListId);
      }
      size += objectsDestroyed_.CalculateSize(_repeated_objectsDestroyed_codec);
      if (ObjectUpdates.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ObjectUpdates);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrameMessage other) {
      if (other == null) {
        return;
      }
      if (other.ListId != 0) {
        ListId = other.ListId;
      }
      objectsDestroyed_.Add(other.objectsDestroyed_);
      if (other.ObjectUpdates.Length != 0) {
        ObjectUpdates = other.ObjectUpdates;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ListId = input.ReadUInt32();
            break;
          }
          case 18: {
            objectsDestroyed_.AddEntriesFrom(input, _repeated_objectsDestroyed_codec);
            break;
          }
          case 26: {
            ObjectUpdates = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkObjectListFrameListUpdate : pb::IMessage<NetworkObjectListFrameListUpdate> {
    private static readonly pb::MessageParser<NetworkObjectListFrameListUpdate> _parser = new pb::MessageParser<NetworkObjectListFrameListUpdate>(() => new NetworkObjectListFrameListUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkObjectListFrameListUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.NetworkObjectListMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkObjectListFrameListUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkObjectListFrameListUpdate(NetworkObjectListFrameListUpdate other) : this() {
      frames_ = other.frames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkObjectListFrameListUpdate Clone() {
      return new NetworkObjectListFrameListUpdate(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(10, global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage.Parser);
    private readonly pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage> frames_ = new pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SharpLife.Networking.Shared.Messages.NetworkObjectLists.FrameMessage> Frames {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkObjectListFrameListUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkObjectListFrameListUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frames_.Equals(other.frames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frames_.WriteTo(output, _repeated_frames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkObjectListFrameListUpdate other) {
      if (other == null) {
        return;
      }
      frames_.Add(other.frames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
